/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JOptionPane;
import myBeans.*;
import javax.swing.*;
import java.util.Scanner;

/**
 *
 * @author Kjones36
 */
public class GuestID extends javax.swing.JFrame {
    
    
    String guestid = null; 
    int diff;
    
    static String date = null;
    static String id = null; 
    static String dateo = null;
    String[] months31 = {"01","03","05","07","08","10","12"};
    String[] months30 = {"04","06","09","11"};
    
    

    /**
     * Creates new form GuestID
     */
    public GuestID(String d, String dout ,String i) {
        date = d;
        dateo = dout; 
        id = i;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tGuestID = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Insert guest ID that matches info:");

        tGuestID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jToggleButton1.setText("Go");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(tGuestID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tGuestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        DBConnect dbConnect = new DBConnect();

        
        guestid = tGuestID.getText();
        
        String Sql = "select datediff('"+dateo+"','"+date+"')as diff";
       
        String output = dbConnect.queryDB(Sql);
        Scanner scan = new Scanner(output);
        scan.useDelimiter(",");
        diff = scan.nextInt();
        
        
        for(int i=0 ; i<=diff; i++)
        {
            int c = 0;
            if(i==0)
            {
                ReservationSQL r = new ReservationSQL(date,id,guestid);
                dbConnect.updateDB(r.toString());
            }
            else
            {
                for(int h = 0; h < months31.length;h++)
                {
                    if(date.substring(8,10).equals("31") && date.substring(5,7).equals(months31[h]) && !(date.substring(5,7).equals(months31.length-1)))
                    {
                        if(Integer.parseInt(months31[h])+1<10)
                        {
                            date = date.substring(0,5)+"0"+Integer.toString(Integer.parseInt(months31[h])+1)+"-01";                       
                            ReservationSQL s = new ReservationSQL(date,id,guestid);
                            dbConnect.updateDB(s.toString());
                            c = 1;
                        }
                        else
                        {
                            date = date.substring(0,5)+Integer.toString(Integer.parseInt(months31[h])+1)+"-01";                       
                            ReservationSQL s = new ReservationSQL(date,id,guestid);
                            dbConnect.updateDB(s.toString());
                            c = 1;
                        }

                    }
                    if(date.substring(8,10).equals("31") && date.substring(5,7).equals(months31[h]) && date.substring(5,7).equals(months31.length-1))
                    {
                        date = Integer.toString(Integer.parseInt(date.substring(0,4))+1)+"-01-01";
                        ReservationSQL t = new ReservationSQL(date,id,guestid);
                        dbConnect.updateDB(t.toString());
                        c = 1;
                    }
                }
                for(int j = 0; j < months30.length; j++)
                {
                    if(date.substring(8,10).equals("30") && date.substring(5,7).equals(months30[j]))
                    {
                        if(Integer.parseInt(months30[j])+1<10)
                        {
                            date = date.substring(0,5)+"0"+Integer.toString(Integer.parseInt(months30[j])+1)+"-01";                      
                            ReservationSQL u = new ReservationSQL(date,id,guestid);
                            dbConnect.updateDB(u.toString());
                            c = 1;
                        }
                        else
                        {
                            date = date.substring(0,5)+Integer.toString(Integer.parseInt(months30[j])+1)+"-01";                      
                            ReservationSQL u = new ReservationSQL(date,id,guestid);
                            dbConnect.updateDB(u.toString());
                            c = 1;
                        }
                    }
                }
                if(date.substring(5,7).equals("02") && date.substring(8,10).equals("28"))
                {
                    date = date.substring(0,5)+"03-01";
                    ReservationSQL v = new ReservationSQL(date,id,guestid);
                    dbConnect.updateDB(v.toString());
                    c = 1;
                }
                if((Integer.parseInt(date.substring(8,10))<28) && (c == 0) || (((Integer.parseInt(date.substring(8,10))>= 28) && !(date.substring(5,7).equals("02")))&&(Integer.parseInt(date.substring(8,10))<31)))
                {
                    if(Integer.parseInt(date.substring(8,10))+1<10)
                    {
                        date = date.substring(0,8)+"0"+Integer.toString((Integer.parseInt(date.substring(8, 10)))+1);
                        ReservationSQL s = new ReservationSQL(date,id,guestid);
                        dbConnect.update(s.toString());
                    }
                    else
                    {
                        date = date.substring(0,8)+Integer.toString((Integer.parseInt(date.substring(8, 10)))+1);
                        ReservationSQL t = new ReservationSQL(date,id,guestid);
                        dbConnect.update(t.toString());
                    }
                }
                  
                
            }
           
           
        }
        new thankYou().setVisible(true);
        dispose();
       
        //String tdate = date+"+";
        //tdate = tdate.replaceFirst(tdate.substring(8, 11),Integer.toString((Integer.parseInt(tdate.substring(8, 10)))+i)+"+");
        //date = tdate.substring(0,10);
        //ReservationSQL o = new ReservationSQL(date,id,guestid);
        
        //ReservationSQL o = new ReservationSQL(date,id,guestid);
        
        //String Sql = o.toString();
        
        //for(int i = Integer.parseInt(date.substring(8, 10));i<0;i++)
        
        
        
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuestID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuestID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuestID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuestID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuestID(date,id,dateo).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField tGuestID;
    // End of variables declaration//GEN-END:variables
}
